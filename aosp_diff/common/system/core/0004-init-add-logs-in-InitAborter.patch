From 6a0b102c236a64aa9991b484e75b78ec1a75b75d Mon Sep 17 00:00:00 2001
From: Zhu Tingting <tingting.zhu@intel.com>
Date: Wed, 23 Feb 2022 13:41:22 +0800
Subject: [PATCH] init: add logs in InitAborter

add logs when init process abort so we can know what happened, and why
the init process exit (the container exit then), e.g. LOG(FATAL)

if the init is run in a container, it will call reboot when abort, and
if the kernel support reboot_pid_ns, it will be killed with signal
SIGHUP, and the exit code as 128 + SIGHUP = 129, you can check it by
docker command: docker inspect -f '{{ .State.ExitCode }}' $id

Change-Id: Ibe67a6b8a5675dbc515b7f8a43d7eecf2084510c
Tracked-On: OAM-101116
Signed-off-by: Zhu Tingting <tingting.zhu@intel.com>
Signed-off-by: Joe Zheng <joe.zheng@intel.com>
---
 init/util.cpp | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/init/util.cpp b/init/util.cpp
index 255434a1b..06e79d537 100644
--- a/init/util.cpp
+++ b/init/util.cpp
@@ -673,12 +673,15 @@ Result<std::string> ParseUmountAll(const std::vector<std::string>& args) {
 }
 
 static void InitAborter(const char* abort_message) {
+    android::base::ScopedLogSeverity info(android::base::INFO);
+    LOG(WARNING) << "InitAborter called by pid " << getpid() << ": " << abort_message;
     // When init forks, it continues to use this aborter for LOG(FATAL), but we want children to
     // simply abort instead of trying to reboot the system.
     if (getpid() != 1) {
         android::base::DefaultAborter(abort_message);
         return;
     }
+    LOG(WARNING) << "INIT ABORT!";
 
     InitFatalReboot(SIGABRT);
 }
-- 
2.39.0

